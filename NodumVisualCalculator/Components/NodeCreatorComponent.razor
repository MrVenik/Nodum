@inject NodumCalcService NodumCalcService

<ModalWindow @ref="_modalWindow">
    <div class="modal-window">
        <div class="modal-header">
            <div class="modal-header-element modal-header-text">Create New Node</div>
            <div class="modal-header-element" @onclick="() => _modalWindow.Close()">
                <span class="iconify iconify-main" data-icon="mdi:close" data-inline="false"></span>
            </div>
        </div>
        <div class="modal-window-element">
            <div class="modal-window-element-content input-container">
                <div class="node-header-text">Name: </div>
                <input type="text" @bind-value="_nodeToAddName" />
            </div>
        </div>
        <div class="modal-window-element">
            <div class="modal-window-element-content">
                <button @onclick="@(() => CreateNewNode())">Create</button>
            </div>
        </div>
    </div>
</ModalWindow>

@code {
    private Node _nodeToAdd;
    private Node _node;

    private ModalWindow _modalWindow;

    private string _nodeToAddName;

    public void Open()
    {
        _nodeToAdd = new EmptyNode();
        _modalWindow.Open();
    }

    public void Open(Node node, Node nodeToAdd)
    {
        _node = node;
        _nodeToAdd = nodeToAdd;
        _modalWindow.Open();
    }

    private void CreateNewNode()
    {
        if (_nodeToAdd != null)
        {
            _nodeToAdd.Name = _nodeToAddName;
            if (_node != null)
            {
                _node.AddInternalNode(_nodeToAdd);
            }
            else
            {
                NodumCalcService.MainProject.AddNode(_nodeToAdd, "Custom");
            }
        }


        _nodeToAddName = string.Empty;
        _nodeToAdd = null;
        _node = null;
        _modalWindow.Close();
    }
}
