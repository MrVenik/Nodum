<CascadingValue Value="this">
    @DropdownContent
</CascadingValue>

<div class="dropdown">
    <div @onclick="ShowDropdown">
        @DropdownTrigger
    </div>
    <div class="dropdown-content" style="@(_dropdownShowed ? "display: block;" : "display: none;")">
        @foreach (var element in Elements)
        {
            <div class="dropdown-content-element" @onclick="@((e) => OnElementClick(element, e))">
                @element.ChildContent
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment DropdownTrigger { get; set; }
    [Parameter]
    public RenderFragment DropdownContent { get; set; }

    public List<DropdownElement> Elements { get; } = new List<DropdownElement>();

    private bool _dropdownShowed = false;

    private void ShowDropdown()
    {
        _dropdownShowed = !_dropdownShowed;
    }

    private void OnElementClick(DropdownElement element, MouseEventArgs args)
    {
        element?.OnClick?.Invoke(args);
        if (element.HideOnClick)
        {
            _dropdownShowed = false;
        }
    }
}

